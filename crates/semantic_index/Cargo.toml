[package]
name = "semantic_index"
description = "Process, chunk, and embed text as vectors for semantic search."
version = "0.1.0"
edition.workspace = true
publish.workspace = true
license = "GPL-3.0-or-later"

[lints]
workspace = true

[lib]
path = "src/semantic_index.rs"

[features]
gpu-embeddings = ["candle-core", "candle-nn", "candle-transformers", "tokenizers", "safetensors", "qdrant-client"]

[[example]]
name = "index"
path = "examples/index.rs"
crate-type = ["bin"]

[dependencies]
anyhow.workspace = true
async-trait.workspace = true
arrayvec.workspace = true
blake3.workspace = true
client.workspace = true
clock.workspace = true
dirs.workspace = true
code-parsers = { path = "../code-parsers" }
collections.workspace = true
feature_flags.workspace = true
fs.workspace = true
futures-batch.workspace = true
futures.workspace = true
gpui.workspace = true
heed.workspace = true
http_client.workspace = true
language.workspace = true
language_model.workspace = true
log.workspace = true
open_ai.workspace = true
parking_lot.workspace = true
project.workspace = true
schemars.workspace = true
serde.workspace = true
serde_json.workspace = true
settings.workspace = true
sha2.workspace = true
smol.workspace = true
streaming-iterator.workspace = true
theme.workspace = true
tree-sitter.workspace = true
ui.workspace = true
unindent.workspace = true
util.workspace = true
workspace.workspace = true
worktree.workspace = true
workspace-hack.workspace = true

# GPU embeddings dependencies (optional)
[target.'cfg(not(target_os = "macos"))'.dependencies]
candle-core = { version = "0.9", features = ["cuda"], optional = true }
candle-nn = { version = "0.9", optional = true }
candle-transformers = { version = "0.9", optional = true }
tokenizers = { version = "0.20", optional = true }
safetensors = { version = "0.4", optional = true }
qdrant-client = { version = "1.10", optional = true }

[target.'cfg(target_os = "macos")'.dependencies]
candle-core = { version = "0.9", features = ["metal"], optional = true }
candle-nn = { version = "0.9", optional = true }
candle-transformers = { version = "0.9", optional = true }
tokenizers = { version = "0.20", optional = true }
safetensors = { version = "0.4", optional = true }
qdrant-client = { version = "1.10", optional = true }

[dev-dependencies]
client = { workspace = true, features = ["test-support"] }
fs = { workspace = true, features = ["test-support"] }
futures.workspace = true
gpui = { workspace = true, features = ["test-support"] }
http_client = { workspace = true, features = ["test-support"] }
language = { workspace = true, features = ["test-support"] }
languages.workspace = true
project = { workspace = true, features = ["test-support"] }
tempfile.workspace = true
reqwest_client.workspace = true
util = { workspace = true, features = ["test-support"] }
workspace = { workspace = true, features = ["test-support"] }
worktree = { workspace = true, features = ["test-support"] }
zlog.workspace = true
